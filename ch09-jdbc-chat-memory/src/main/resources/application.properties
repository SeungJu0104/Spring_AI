## íë¡ì í¸ ì´ë¦
spring.application.name=ch09-jdbc-chat-memory

## ìë² í¬í¸
server.port=8080

## í°ë¯¸ë ì¹¼ë¼ ì¶ë ¥
spring.output.ansi.enabled=ALWAYS

## ë¡ê¹
logging.pattern.console=%clr(%-5level){green} %clr(%logger.%M\\(\\)){cyan}: %msg%n
logging.level.org.springframework.ai.chat.client.advisor=DEBUG

## íì¼ ìë¡ë
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=15MB

## ì ì  ë¦¬ìì¤ì ëí´ ìºì ì¬ì© ì í¨
spring.web.resources.cache.cachecontrol.no-cache=true
spring.web.resources.cache.cachecontrol.no-store=true
spring.web.resources.cache.cachecontrol.must-revalidate=true

## OpenAI
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o-mini
spring.ai.openai.embedding.options.model=text-embedding-3-small

## PostgreSQL
spring.datasource.url=jdbc:postgresql://[연결할 DB 주소]/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

## Chat Memory
spring.ai.chat.memory.repository.jdbc.initialize-schema=always
# DB 스키마 초기화


